name: Dev CI/CD Pipeline

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Run Tests and Build (in api-server)
      working-directory: api-server
      run: ./gradlew test build

    - name: Install cloudflared
      run: |
        curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
        chmod +x cloudflared
        sudo mv cloudflared /usr/local/bin/

    - name: Write SSH Key
      run: |
        echo "${{ secrets.PADO_DEV_SSH_KEY }}" > pado_dev_key
        chmod 600 pado_dev_key

    - name: Copy .jar to server
      run: |
        ssh -o ProxyCommand="cloudflared access ssh --hostname pado-dev-ssh.taehyeok.org" \
            -o StrictHostKeyChecking=no \
            -i pado_dev_key root@localhost \
            'mkdir -p /opt/pado && exit'

        scp -i pado_dev_key \
        -o ProxyCommand="cloudflared access ssh --hostname pado-dev-ssh.taehyeok.org" \
        -o StrictHostKeyChecking=no \
        api-server/build/libs/pado-server-0.0.1-SNAPSHOT.jar \
        root@localhost:/opt/pado/api-server.jar

    - name: Kill running process (if any)
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o ProxyCommand="cloudflared access ssh --hostname pado-dev-ssh.taehyeok.org" \
            -i pado_dev_key root@localhost \
            'pkill -f "java.*api-server" || true'

    - name: Start server
      run: |
        ssh -o StrictHostKeyChecking=no \
            -o ProxyCommand="cloudflared access ssh --hostname pado-dev-ssh.taehyeok.org" \
            -i pado_dev_key root@localhost \
            'nohup java -jar /opt/pado/api-server.jar > /opt/pado/api-server.log 2>&1 &'
